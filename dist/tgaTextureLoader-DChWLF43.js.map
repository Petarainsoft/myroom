{"version":3,"file":"tgaTextureLoader-DChWLF43.js","sources":["../node_modules/@babylonjs/core/Materials/Textures/Loaders/tgaTextureLoader.js"],"sourcesContent":["import { GetTGAHeader, UploadContent } from \"../../../Misc/tga.js\";\n/**\n * Implementation of the TGA Texture Loader.\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class _TGATextureLoader {\n    constructor() {\n        /**\n         * Defines whether the loader supports cascade loading the different faces.\n         */\n        this.supportCascades = false;\n    }\n    /**\n     * Uploads the cube texture data to the WebGL texture. It has already been bound.\n     */\n    loadCubeData() {\n        // eslint-disable-next-line no-throw-literal\n        throw \".env not supported in Cube.\";\n    }\n    /**\n     * Uploads the 2D texture data to the WebGL texture. It has already been bound once in the callback.\n     * @param data contains the texture data\n     * @param texture defines the BabylonJS internal texture\n     * @param callback defines the method to call once ready to upload\n     */\n    loadData(data, texture, callback) {\n        const bytes = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n        const header = GetTGAHeader(bytes);\n        callback(header.width, header.height, texture.generateMipMaps, false, () => {\n            UploadContent(texture, bytes);\n        });\n    }\n}\n//# sourceMappingURL=tgaTextureLoader.js.map"],"names":["_TGATextureLoader","data","texture","callback","bytes","header","GetTGAHeader","UploadContent"],"mappings":";AAMO,MAAMA,EAAkB;AAAA,EAC3B,cAAc;AAIV,SAAK,kBAAkB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe;AAEX,UAAM;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAASC,GAAMC,GAASC,GAAU;AAC9B,UAAMC,IAAQ,IAAI,WAAWH,EAAK,QAAQA,EAAK,YAAYA,EAAK,UAAU,GACpEI,IAASC,EAAaF,CAAK;AACjC,IAAAD,EAASE,EAAO,OAAOA,EAAO,QAAQH,EAAQ,iBAAiB,IAAO,MAAM;AACxE,MAAAK,EAAcL,GAASE,CAAK;AAAA,IAChC,CAAC;AAAA,EACL;AACJ;","x_google_ignoreList":[0]}